function cov_1y1fzkry2i(){var path="D:\\Arkademy\\Ceritakopi-Backend\\src\\controllers\\auth.js";var hash="a2735224401065d2cc833f83fb7d536bcf365f46";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Arkademy\\Ceritakopi-Backend\\src\\controllers\\auth.js",statementMap:{"0":{start:{line:2,column:18},end:{line:2,column:43}},"1":{start:{line:3,column:19},end:{line:3,column:53}},"2":{start:{line:4,column:15},end:{line:4,column:32}},"3":{start:{line:5,column:12},end:{line:5,column:35}},"4":{start:{line:6,column:25},end:{line:6,column:36}},"5":{start:{line:7,column:19},end:{line:7,column:40}},"6":{start:{line:8,column:14},end:{line:8,column:46}},"7":{start:{line:10,column:0},end:{line:28,column:2}},"8":{start:{line:11,column:17},end:{line:11,column:25}},"9":{start:{line:12,column:23},end:{line:12,column:65}},"10":{start:{line:13,column:4},end:{line:15,column:5}},"11":{start:{line:14,column:8},end:{line:14,column:57}},"12":{start:{line:16,column:29},end:{line:16,column:84}},"13":{start:{line:17,column:4},end:{line:19,column:5}},"14":{start:{line:18,column:8},end:{line:18,column:64}},"15":{start:{line:20,column:4},end:{line:27,column:5}},"16":{start:{line:21,column:27},end:{line:21,column:51}},"17":{start:{line:22,column:8},end:{line:22,column:69}},"18":{start:{line:23,column:8},end:{line:23,column:41}},"19":{start:{line:24,column:8},end:{line:24,column:78}},"20":{start:{line:26,column:8},end:{line:26,column:57}},"21":{start:{line:30,column:0},end:{line:57,column:2}},"22":{start:{line:31,column:30},end:{line:31,column:38}},"23":{start:{line:32,column:23},end:{line:32,column:60}},"24":{start:{line:34,column:4},end:{line:36,column:5}},"25":{start:{line:35,column:8},end:{line:35,column:53}},"26":{start:{line:37,column:17},end:{line:37,column:30}},"27":{start:{line:39,column:20},end:{line:39,column:65}},"28":{start:{line:40,column:4},end:{line:47,column:5}},"29":{start:{line:41,column:8},end:{line:46,column:9}},"30":{start:{line:42,column:26},end:{line:42,column:107}},"31":{start:{line:43,column:12},end:{line:43,column:73}},"32":{start:{line:45,column:12},end:{line:45,column:66}},"33":{start:{line:48,column:4},end:{line:55,column:5}},"34":{start:{line:49,column:8},end:{line:54,column:9}},"35":{start:{line:50,column:26},end:{line:50,column:107}},"36":{start:{line:51,column:12},end:{line:51,column:67}},"37":{start:{line:53,column:12},end:{line:53,column:66}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:17},end:{line:10,column:18}},loc:{start:{line:10,column:37},end:{line:28,column:1}},line:10},"1":{name:"(anonymous_1)",decl:{start:{line:30,column:16},end:{line:30,column:17}},loc:{start:{line:30,column:36},end:{line:57,column:1}},line:30}},branchMap:{"0":{loc:{start:{line:13,column:4},end:{line:15,column:5}},type:"if",locations:[{start:{line:13,column:4},end:{line:15,column:5}},{start:{line:13,column:4},end:{line:15,column:5}}],line:13},"1":{loc:{start:{line:17,column:4},end:{line:19,column:5}},type:"if",locations:[{start:{line:17,column:4},end:{line:19,column:5}},{start:{line:17,column:4},end:{line:19,column:5}}],line:17},"2":{loc:{start:{line:20,column:4},end:{line:27,column:5}},type:"if",locations:[{start:{line:20,column:4},end:{line:27,column:5}},{start:{line:20,column:4},end:{line:27,column:5}}],line:20},"3":{loc:{start:{line:34,column:4},end:{line:36,column:5}},type:"if",locations:[{start:{line:34,column:4},end:{line:36,column:5}},{start:{line:34,column:4},end:{line:36,column:5}}],line:34},"4":{loc:{start:{line:40,column:4},end:{line:47,column:5}},type:"if",locations:[{start:{line:40,column:4},end:{line:47,column:5}},{start:{line:40,column:4},end:{line:47,column:5}}],line:40},"5":{loc:{start:{line:41,column:8},end:{line:46,column:9}},type:"if",locations:[{start:{line:41,column:8},end:{line:46,column:9}},{start:{line:41,column:8},end:{line:46,column:9}}],line:41},"6":{loc:{start:{line:48,column:4},end:{line:55,column:5}},type:"if",locations:[{start:{line:48,column:4},end:{line:55,column:5}},{start:{line:48,column:4},end:{line:55,column:5}}],line:48},"7":{loc:{start:{line:49,column:8},end:{line:54,column:9}},type:"if",locations:[{start:{line:49,column:8},end:{line:54,column:9}},{start:{line:49,column:8},end:{line:54,column:9}}],line:49}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a2735224401065d2cc833f83fb7d536bcf365f46"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1y1fzkry2i=function(){return actualCoverage;};}return actualCoverage;}cov_1y1fzkry2i();/* eslint-disable no-undef */const authModel=(cov_1y1fzkry2i().s[0]++,require('../models/auth'));const{response}=(cov_1y1fzkry2i().s[1]++,require('../helpers/formResponse'));const bycrpt=(cov_1y1fzkry2i().s[2]++,require('bcrypt'));const jwt=(cov_1y1fzkry2i().s[3]++,require('jsonwebtoken'));const{APP_SECRET_KEY}=(cov_1y1fzkry2i().s[4]++,process.env);const nodemailer=(cov_1y1fzkry2i().s[5]++,require('nodemailer'));const regex=(cov_1y1fzkry2i().s[6]++,require('../helpers/validation'));cov_1y1fzkry2i().s[7]++;exports.signup=async(req,res)=>{cov_1y1fzkry2i().f[0]++;const data=(cov_1y1fzkry2i().s[8]++,req.body);const checkEmail=(cov_1y1fzkry2i().s[9]++,await authModel.getUserByEmail(data.email));cov_1y1fzkry2i().s[10]++;if(checkEmail.length>0){cov_1y1fzkry2i().b[0][0]++;cov_1y1fzkry2i().s[11]++;return response(res,401,"Email already exist!");}else{cov_1y1fzkry2i().b[0][1]++;}const checkPhoneNumber=(cov_1y1fzkry2i().s[12]++,await authModel.getUserByPhoneNumber(data.phone_number));cov_1y1fzkry2i().s[13]++;if(checkPhoneNumber.length>0){cov_1y1fzkry2i().b[1][0]++;cov_1y1fzkry2i().s[14]++;return response(res,401,"Phone number already exist!");}else{cov_1y1fzkry2i().b[1][1]++;}cov_1y1fzkry2i().s[15]++;if(regex.validateEmail(data.email)){cov_1y1fzkry2i().b[2][0]++;const saltRounds=(cov_1y1fzkry2i().s[16]++,await bycrpt.genSalt(10));cov_1y1fzkry2i().s[17]++;data.password=await bycrpt.hash(data.password,saltRounds);cov_1y1fzkry2i().s[18]++;await authModel.createUser(data);cov_1y1fzkry2i().s[19]++;return response(res,200,'Create user has been successfully!',data);}else{cov_1y1fzkry2i().b[2][1]++;cov_1y1fzkry2i().s[20]++;return response(res,401,'Email is not valid!');}};cov_1y1fzkry2i().s[21]++;exports.login=async(req,res)=>{cov_1y1fzkry2i().f[1]++;const{email,password}=(cov_1y1fzkry2i().s[22]++,req.body);const checkEmail=(cov_1y1fzkry2i().s[23]++,await authModel.getUserByEmail(email));cov_1y1fzkry2i().s[24]++;if(checkEmail.length<1){cov_1y1fzkry2i().b[3][0]++;cov_1y1fzkry2i().s[25]++;return response(res,404,"email not found!");}else{cov_1y1fzkry2i().b[3][1]++;}const user=(cov_1y1fzkry2i().s[26]++,checkEmail[0]);// console.log('data user: ', user);
const compare=(cov_1y1fzkry2i().s[27]++,await bycrpt.compare(password,user.password));cov_1y1fzkry2i().s[28]++;if(user.role==='admin'){cov_1y1fzkry2i().b[4][0]++;cov_1y1fzkry2i().s[29]++;if(compare){cov_1y1fzkry2i().b[5][0]++;const token=(cov_1y1fzkry2i().s[30]++,jwt.sign({id:user.id,email:user.email},APP_SECRET_KEY,{expiresIn:'1h'}));cov_1y1fzkry2i().s[31]++;return response(res,200,'Login Admin Success!',{token});}else{cov_1y1fzkry2i().b[5][1]++;cov_1y1fzkry2i().s[32]++;return response(res,401,'Wrong email or password!');}}else{cov_1y1fzkry2i().b[4][1]++;}cov_1y1fzkry2i().s[33]++;if(user.role==='customer'){cov_1y1fzkry2i().b[6][0]++;cov_1y1fzkry2i().s[34]++;if(compare){cov_1y1fzkry2i().b[7][0]++;const token=(cov_1y1fzkry2i().s[35]++,jwt.sign({id:user.id,email:user.email},APP_SECRET_KEY,{expiresIn:'1h'}));cov_1y1fzkry2i().s[36]++;return response(res,200,'Login Success!',{token});}else{cov_1y1fzkry2i().b[7][1]++;cov_1y1fzkry2i().s[37]++;return response(res,401,'Wrong email or password!');}}else{cov_1y1fzkry2i().b[6][1]++;}};// exports.forgotPassword  = async (req, res) => {
//     const{email} = req.body;
//     const checkEmail = await authModel.checkEmail(email);
//     try {
//         if (checkEmail.length < 1) {
//             return response(res, 404, 'Email not found!')
//         } else {
//             if (results[0]) {
//                 const user = results[0];
//                 const tokenForgot = jwt.sign({
//                     id: user.id,
//                     email: user.email
//                 }, APP_SECRET_KEY, {
//                     expiresIn: '24h'
//                 });
//                 //Nodemailer: 
//                 let transporter = nodemailer.createTransport({
//                     service: 'gmail',
//                     host: 'smtp.gmail.com',
//                     port: 578,
//                     secure: false,
//                     auth: {
//                         user: process.env.USER_EMAIL,
//                         pass: process.env.PASS_EMAIL
//                     }
//                 });
//                 let mailOptions = {
//                     from: '<noreply@gmail.com>',
//                     to: req.body.email,
//                     subject: 'Generate Link for Reset Password from BravoTeam',
//                     html: ` <h3> Link  to Reset Password </h3>
//                             <p> Hello, this is your link: ${process.env.APP_URL}/auth/reset-password/${tokenForgot} </p>`
//                 };
//                 transporter.sendMail(mailOptions, (err) => {
//                     if (err) {
//                         console.log('Its Error: ', err);
//                     } else {
//                         console.log('Sent Success!!!!');
//                     }
//                 });
//                 return response(res, 200, 'Your link has been sent in your mail!');
//             }
//             else {
//                 return response(res, 404, 'Your email is not found!');
//             }
//         }
//     } catch (error) {
//         return response(res, 500, 'error occured!', error)
//     }
// };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,